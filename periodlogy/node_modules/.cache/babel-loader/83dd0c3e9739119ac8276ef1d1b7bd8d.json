{"ast":null,"code":"import _classCallCheck from \"/home/khush/Documents/periodlogy/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/khush/Documents/periodlogy/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/khush/Documents/periodlogy/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/khush/Documents/periodlogy/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/khush/Documents/periodlogy/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectSpread from \"/home/khush/Documents/periodlogy/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/khush/Documents/periodlogy/src/component/home.js\";\nimport React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Button from '@material-ui/core/Button';\n\nvar styles = function styles(theme) {\n  return {\n    root: _objectSpread({}, theme.mixins.gutters(), {\n      paddingTop: theme.spacing.unit * 2,\n      paddingBottom: theme.spacing.unit * 2,\n      backgroundColor: \"#f37474\",\n      maxWidth: \"364px\"\n    }),\n    question: {\n      fontWeight: \"bold\",\n      fontFamily: \"'Patua One', cursive\",\n      color: \"rgba(97, 22, 17, 0.87)\"\n    },\n    description: {\n      fontFamily: \"'Gochi Hand', cursive\",\n      fontSize: \"21px\",\n      padding: theme.spacing.unit * 2\n    },\n    margin: {\n      margin: theme.spacing.unit * 2,\n      float: \"right\"\n    },\n    heading: {\n      textAlign: \"center\",\n      fontSize: \"64px\",\n      fontFamily: \"'Spicy Rice', cursive\",\n      color: \"rgba(142, 26, 19, 0.87)\"\n    },\n    button: {\n      color: \"#801b3f\",\n      border: \"1px solid #a00b0b\"\n    }\n  };\n};\n\nvar Home =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Home, _Component);\n\n  function Home() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Home)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: []\n    };\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('http://127.0.0.1:4000/get_new_question', {\n        method: 'GET',\n        headers: new Headers()\n      }).then(function (response) {\n        return response.json();\n      }).then(function (resp) {\n        return _this2.setState({\n          data: resp\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.data.questionList);\n      var classes = this.props.classes;\n      var data = this.state.data;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h5\",\n        component: \"h3\",\n        className: classes.heading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"PeriodoLogy\"), React.createElement(Fab, {\n        color: \"secondary\",\n        \"aria-label\": \"Add\",\n        className: classes.margin,\n        onClick: this.props.openAddPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(AddIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        container: true,\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, data.questionList.map(function (card, i) {\n        React.createElement(Paper, {\n          className: classes.root,\n          elevation: 1,\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          variant: \"h5\",\n          component: \"h3\",\n          className: classes.question,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, \"This is a sheet of paper.\"), React.createElement(Typography, {\n          component: \"p\",\n          className: classes.description,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, \"Paper can be used to build surface or other elements for your application.\"), React.createElement(Button, {\n          variant: \"outlined\",\n          color: \"secondary\",\n          className: classes.button,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, \"Watch Video\"), React.createElement(Button, {\n          variant: \"outlined\",\n          color: \"secondary\",\n          className: classes.button,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, \"Read Article\"));\n      })));\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nHome.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Home);","map":{"version":3,"sources":["/home/khush/Documents/periodlogy/src/component/home.js"],"names":["React","Component","Grid","PropTypes","withStyles","Paper","Typography","Fab","AddIcon","Button","styles","theme","root","mixins","gutters","paddingTop","spacing","unit","paddingBottom","backgroundColor","maxWidth","question","fontWeight","fontFamily","color","description","fontSize","padding","margin","float","heading","textAlign","button","border","Home","state","data","fetch","method","headers","Headers","then","response","json","resp","setState","console","log","questionList","classes","props","openAddPage","map","card","i","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n    root: {\n      ...theme.mixins.gutters(),\n      paddingTop: theme.spacing.unit * 2,\n      paddingBottom: theme.spacing.unit * 2,\n      backgroundColor: \"#f37474\",\n      maxWidth: \"364px\",\n    },\n    question: {\n        fontWeight: \"bold\",\n        fontFamily: \"'Patua One', cursive\",\n        color:\"rgba(97, 22, 17, 0.87)\"\n    },\n    description: {\n        fontFamily: \"'Gochi Hand', cursive\",\n        fontSize: \"21px\",\n        padding: theme.spacing.unit * 2,\n    },\n    margin: {\n        margin: theme.spacing.unit*2,\n        float: \"right\"\n      },\n    heading:{\n        textAlign:\"center\",\n        fontSize: \"64px\",\n        fontFamily: \"'Spicy Rice', cursive\",\n        color:\"rgba(142, 26, 19, 0.87)\"\n      },\n    button:{\n        color: \"#801b3f\",\n        border: \"1px solid #a00b0b\",\n    }\n  });\n\nclass Home extends Component {\n    state={\n        data:[]\n    }\n    \n    componentDidMount() {\n        fetch('http://127.0.0.1:4000/get_new_question', {method:'GET', headers: new Headers()})\n            .then(response => response.json())\n            .then(resp => this.setState({ data: resp }));\n    }\n\n  render() {\n    console.log(this.state.data.questionList)\n    const { classes } = this.props;\n    const {data} = this.state;\n    return (\n        <div>\n            <Typography variant=\"h5\" component=\"h3\" className={classes.heading}>\n                    PeriodoLogy\n            </Typography>\n            <Fab color=\"secondary\" aria-label=\"Add\" className={classes.margin} onClick={this.props.openAddPage}>\n                <AddIcon />\n            </Fab>\n            <Grid container justify=\"center\">\n            {\n                data.questionList.map((card, i)=>{\n                <Paper className={classes.root} elevation={1} key={i}>\n                    <Typography variant=\"h5\" component=\"h3\" className={classes.question}>\n                    This is a sheet of paper.\n                    </Typography>\n                    <Typography component=\"p\" className={classes.description}>\n                    Paper can be used to build surface or other elements for your application.\n                    </Typography>\n                    <Button variant=\"outlined\" color=\"secondary\" className={classes.button}>\n                        Watch Video\n                    </Button>\n                    <Button variant=\"outlined\" color=\"secondary\" className={classes.button}>\n                        Read Article \n                    </Button>\n                </Paper>\n            })}\n            </Grid>\n        </div>\n    );\n  }\n}\n\nHome.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n  \n  export default withStyles(styles)(Home);\n"]},"metadata":{},"sourceType":"module"}